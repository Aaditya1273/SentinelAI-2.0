version: '3.8'

services:
  sentinelai:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_ALCHEMY_ID=${ALCHEMY_ID}
      - NEXT_PUBLIC_INFURA_ID=${INFURA_ID}
      - NEXT_PUBLIC_WALLET_CONNECT_PROJECT_ID=${WALLET_CONNECT_PROJECT_ID}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MCP_SERVER_URL=ws://mcp-server:8080
      - DATABASE_URL=postgresql://sentinelai:password@postgres:5432/sentinelai
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
      - mcp-server
    volumes:
      - ./circuits:/app/circuits
      - ./proofs:/app/proofs
    networks:
      - sentinelai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=sentinelai
      - POSTGRES_USER=sentinelai
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - sentinelai-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sentinelai-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - sentinelai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  hardhat-node:
    image: node:20-alpine
    working_dir: /app
    command: npx hardhat node --hostname 0.0.0.0
    ports:
      - "8545:8545"
    volumes:
      - .:/app
    networks:
      - sentinelai-network
    restart: unless-stopped

  circuit-compiler:
    image: node:20-alpine
    working_dir: /app
    command: sh -c "npm install -g circom snarkjs && npm run compile-circuits"
    volumes:
      - .:/app
    networks:
      - sentinelai-network
    depends_on:
      - sentinelai

volumes:
  postgres_data:
  redis_data:

networks:
  sentinelai-network:
    driver: bridge
